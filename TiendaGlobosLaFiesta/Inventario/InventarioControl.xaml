<UserControl x:Class="TiendaGlobosLaFiesta.Views.InventarioControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:conv="clr-namespace:TiendaGlobosLaFiesta.Converters"
             xmlns:vm="clr-namespace:TiendaGlobosLaFiesta.ViewModels"
             xmlns:models="clr-namespace:TiendaGlobosLaFiesta.Models"
             Background="#F4F7FC">

    <UserControl.DataContext>
        <vm:InventarioViewModel/>
    </UserControl.DataContext>

    <UserControl.Resources>
        <!-- Converters -->
        <conv:LessThanOrEqualTo10Converter x:Key="LessThan10Converter"/>
        <conv:StockStatusToColorConverter x:Key="StockStatusColorConverter"/>
        <conv:NullOrEmptyToDashConverter x:Key="EmptyToDashConverter"/>

        <!-- Estilos de DataGrid -->
        <Style TargetType="DataGridRow" x:Key="ProductoRowStyle">
            <Setter Property="ContextMenu">
                <Setter.Value>
                    <ContextMenu>
                        <MenuItem Header="✏️ Editar Producto" Command="{Binding DataContext.EditarProductoCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
                        <MenuItem Header="🗑️ Eliminar Producto" Command="{Binding DataContext.EliminarProductoCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
                    </ContextMenu>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Stock}" Value="0">
                    <Setter Property="Background" Value="#FFEBEB"/>
                    <Setter Property="Foreground" Value="#A83232"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Stock, Converter={StaticResource LessThan10Converter}}" Value="True">
                    <Setter Property="Background" Value="#FFF9E6"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="DataGridRow" x:Key="GloboRowStyle">
            <Setter Property="ContextMenu">
                <Setter.Value>
                    <ContextMenu>
                        <MenuItem Header="✏️ Editar Globo" Command="{Binding DataContext.EditarGloboCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
                        <MenuItem Header="🗑️ Eliminar Globo" Command="{Binding DataContext.EliminarGloboCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
                    </ContextMenu>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Stock}" Value="0">
                    <Setter Property="Background" Value="#FFEBEB"/>
                    <Setter Property="Foreground" Value="#A83232"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Stock, Converter={StaticResource LessThan10Converter}}" Value="True">
                    <Setter Property="Background" Value="#FFF9E6"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Grid Margin="20">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <TextBlock Text="📦 Gestión de Inventario" 
                   FontSize="28" FontWeight="Bold" Foreground="#1B2B4E" 
                   Margin="0,0,0,15"/>

        <TabControl Grid.Row="1">

            <!-- Stock Crítico -->
            <TabItem Header="Stock Crítico">
                <DataGrid ItemsSource="{Binding StockCritico}" AutoGenerateColumns="False" RowHeight="30" IsReadOnly="True">
                    <DataGrid.Columns>
                        <DataGridTemplateColumn Header="Estatus" Width="70">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Ellipse Width="15" Height="15" Fill="{Binding StockActual, Converter={StaticResource StockStatusColorConverter}}" HorizontalAlignment="Center"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Header="Nombre" Binding="{Binding Nombre}" Width="*"/>
                        <DataGridTextColumn Header="Stock" Binding="{Binding StockActual}" Width="100"/>
                        <DataGridTextColumn Header="Tipo" Binding="{Binding Tipo}" Width="120"/>
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>

            <!-- Productos -->
            <TabItem Header="Productos">
                <Grid Margin="0,5,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <!-- Toolbar -->
                    <StackPanel Orientation="Horizontal" Margin="0,0,0,5" Grid.Row="0">
                        <Button Command="{Binding AgregarProductoCommand}" Margin="2" ToolTip="Agregar Producto">
                            <TextBlock Text="➕"/>
                        </Button>
                        <Button Command="{Binding EditarProductoCommand}" Margin="2" ToolTip="Editar Producto">
                            <TextBlock Text="✏️"/>
                        </Button>
                        <Button Command="{Binding EliminarProductoCommand}" Margin="2" ToolTip="Eliminar Producto">
                            <TextBlock Text="🗑️"/>
                        </Button>
                        <TextBox Width="200" Margin="10,0,0,0" Text="{Binding TextoBusquedaProducto, UpdateSourceTrigger=PropertyChanged}" PlaceholderText="Buscar producto..."/>
                    </StackPanel>

                    <!-- DataGrid -->
                    <DataGrid Grid.Row="1" ItemsSource="{Binding ProductosView}" 
                              SelectedItem="{Binding ProductoSeleccionado, Mode=TwoWay}" 
                              RowStyle="{StaticResource ProductoRowStyle}" AutoGenerateColumns="False" IsReadOnly="True">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="ID" Binding="{Binding ProductoId}" Width="120"/>
                            <DataGridTextColumn Header="Nombre" Binding="{Binding Nombre}" Width="*"/>
                            <DataGridTextColumn Header="Proveedor" Binding="{Binding ProveedorId, Converter={StaticResource EmptyToDashConverter}}" Width="120"/>
                            <DataGridTextColumn Header="Categoría" Binding="{Binding CategoriaId, Converter={StaticResource EmptyToDashConverter}}" Width="120"/>
                            <DataGridTextColumn Header="Costo" Binding="{Binding Costo, StringFormat=C}" Width="100"/>
                            <DataGridTextColumn Header="Stock" Binding="{Binding Stock}" Width="80"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>

            <!-- Globos -->
            <TabItem Header="Globos">
                <Grid Margin="0,5,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <!-- Toolbar -->
                    <StackPanel Orientation="Horizontal" Margin="0,0,0,5" Grid.Row="0">
                        <Button Command="{Binding AgregarGloboCommand}" Margin="2" ToolTip="Agregar Globo">
                            <TextBlock Text="➕"/>
                        </Button>
                        <Button Command="{Binding EditarGloboCommand}" Margin="2" ToolTip="Editar Globo">
                            <TextBlock Text="✏️"/>
                        </Button>
                        <Button Command="{Binding EliminarGloboCommand}" Margin="2" ToolTip="Eliminar Globo">
                            <TextBlock Text="🗑️"/>
                        </Button>
                        <TextBox Width="200" Margin="10,0,0,0" Text="{Binding TextoBusquedaGlobo, UpdateSourceTrigger=PropertyChanged}" PlaceholderText="Buscar globo..."/>
                    </StackPanel>

                    <!-- DataGrid -->
                    <DataGrid Grid.Row="1" ItemsSource="{Binding GlobosView}" 
                              SelectedItem="{Binding GloboSeleccionado, Mode=TwoWay}" 
                              RowStyle="{StaticResource GloboRowStyle}" AutoGenerateColumns="False" IsReadOnly="True">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="ID" Binding="{Binding GloboId}" Width="120"/>
                            <DataGridTextColumn Header="Nombre" Binding="{Binding Nombre}" Width="*"/>
                            <DataGridTextColumn Header="Proveedor" Binding="{Binding ProveedorId, Converter={StaticResource EmptyToDashConverter}}" Width="120"/>
                            <DataGridTextColumn Header="Unidad" Binding="{Binding Unidad, Converter={StaticResource EmptyToDashConverter}}" Width="100"/>
                            <DataGridTextColumn Header="Costo" Binding="{Binding Costo, StringFormat=C}" Width="100"/>
                            <DataGridTextColumn Header="Stock" Binding="{Binding Stock}" Width="80"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>

        </TabControl>
    </Grid>
</UserControl>